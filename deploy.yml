- name: Boto and Boto3
  hosts: localhost
  connection: local
  
  tasks:
    - name: Install
      pip: 
        name: 
          - boto
          - boto3   

- name: Gather old instance info for later use
  hosts: localhost
  module_defaults:
    group/aws:
      aws_access_key: "{{access_key}}"
      aws_secret_key: "{{secret_key}}"
      security_token: "{{session_token}}"
  connection: local
  
  tasks:
    - name: Gather EC2 instances info
      ec2_instance_facts:
        region: us-east-1
        filters:
          "tag:eshop": 1
      register: ec2_info

- name: Create new EC2 instance
  hosts: localhost
  connection: local

  tasks:
    - name: Launch EC2 Instance
      ec2:
        instance_type: t2.micro
        image: ami-03ededff12e34e59e                #nemeni se
        region: us-east-1
        key_name: devops                            #vygenerovat - OK
        vpc_subnet_id: subnet-0480f7661e4e070aa     #meni se - OK
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop                                #musi vygenerovat vault - OK
        instance_tags:
          eshop: 1
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
      register: ec2
    - name: Add instance host to group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for ssh connection           #not working
      delegate_to: "{{ item.public_ip }}"
      wait_for_connection:
        delay: 30                             #was 30
        timeout: 300
      loop: "{{ ec2.instances }}"

- name: Configure EC2
  hosts: launched
  remote_user: ec2-user
  connection: ssh

  tasks:
    - name: Install Git and Docker
      yum:
        name:
          - git
          - docker
        state: latest
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Start Docker on startup
      shell: systemctl enable docker
      become: yes
    - name: Set rights to Docker
      shell: usermod -a -G docker ec2-user
      become: yes
    - name: Get eshop from GIT
      git:
        repo: 'https://github.com/sidapetr/ec2.git'
        dest: ./app
    - name: Build Docker with e-shop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port:
          80

- name: Delete old instance after creating new one
  hosts: localhost
  module_defaults:
    group/aws:
      aws_access_key: "{{access_key}}"
      aws_secret_key: "{{secret_key}}"
      security_token: "{{session_token}}"
  connection: local
  
  tasks:
    - name: Delete old instance
      ec2:
        instance_ids: "{{ item.instance_id }}"
        region: us-east-1
        state: absent
        wait: yes
      with_items: "{{ ec2_info.instances }}"
